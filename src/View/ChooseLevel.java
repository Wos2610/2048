/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.Controller;
import Controller.ResourceManager;
import java.awt.Color;
import javax.swing.*;

/**
 *
 * @author LENOVO T480s
 */
public class ChooseLevel extends javax.swing.JFrame {

    private Controller controller = Controller.getInstance();
    private ResourceManager resourceManager = ResourceManager.getInstance();
    private int choice = 0;
    private boolean isChoosed = false;
    /**
     * Creates new form ChooseLevel
     */
    public ChooseLevel() {
        //this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE); 
        this.setTitle("Choose level");
        initComponents();
        initUI();
    }

    void restart(){
        isChoosed = false;
        controller.setLevel(0);
        resourceManager.loadImage("infinity2", label1, "");
        resourceManager.loadImage("clock2", label2, "");
    }
    void initUI(){
        isChoosed = false;
        controller.setLevel(0);
        resourceManager.loadImage("infinity2", label1, "");
        resourceManager.loadImage("clock2", label2, "");
        resourceManager.loadImage("OK1", label3, "");
        textLabel.setForeground(new Color(182, 184, 192));
    }
    
    void changeToGamePlay(){
        controller.renewMatrix();
        controller.getGamePlayState().renderBoard();
        controller.getGamePlayState().setNoti("Press the arrow keys to play");
        controller.getGamePlayState().setVisible(true);
        controller.getChooseLevelState().setVisible(false);
        controller.getHomeState().setVisible(false);
    }

    public boolean isIsChoosed() {
        return isChoosed;
    }

    public void setIsChoosed(boolean isChoosed) {
        this.isChoosed = isChoosed;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        textLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(320, 250));
        setResizable(false);

        label1.setMaximumSize(new java.awt.Dimension(200, 200));
        label1.setPreferredSize(new java.awt.Dimension(70, 70));
        label1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                label1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                label1MouseExited(evt);
            }
        });

        label2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        label2.setMaximumSize(new java.awt.Dimension(180, 276));
        label2.setPreferredSize(new java.awt.Dimension(45, 70));
        label2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                label2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                label2MouseExited(evt);
            }
        });

        label3.setText("jLabel3");
        label3.setPreferredSize(new java.awt.Dimension(64, 32));
        label3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                label3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                label3MouseExited(evt);
            }
        });

        textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textLabel.setPreferredSize(new java.awt.Dimension(205, 16));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void label1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label1MouseClicked
       isChoosed = true;
       textLabel.setText("");
       resourceManager.loadImage("infinity1", label1, "");
       resourceManager.loadImage("clock2", label2, "");
       controller.setLevel(1);
    }//GEN-LAST:event_label1MouseClicked

    private void label2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label2MouseClicked
       isChoosed = true;
       textLabel.setText("");
       resourceManager.loadImage("infinity2", label1, "");
       resourceManager.loadImage("clock1", label2, "");
       controller.setLevel(2);
    }//GEN-LAST:event_label2MouseClicked

    private void label3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label3MouseClicked
        controller.readScoreFromFile("Score");
        controller.setCurrentScore(0);
        controller.setIsFirst2048(1);
        choice = controller.getLevel();
        if(isChoosed == false){
            textLabel.setVisible(true);
            textLabel.setText("You haven't selected the level");
        }
        else{
            isChoosed = false;
            textLabel.setVisible(false);
        }
        switch (choice) {
            case 1 -> {
                controller.getGamePlayState().setDisplayCounterTime(false);
                changeToGamePlay();
            }
            case 2 -> {
                controller.getGamePlayState().setDefaultCounterTime(5, 0);
                controller.getGamePlayState().renderCounterTime();
                changeToGamePlay();
            }
            default -> {
            }
        }
    }//GEN-LAST:event_label3MouseClicked

    private void label3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label3MouseEntered
        resourceManager.loadImage("Ok", label3, "");
    }//GEN-LAST:event_label3MouseEntered

    private void label3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label3MouseExited
        resourceManager.loadImage("OK1", label3, "");
    }//GEN-LAST:event_label3MouseExited

    private void label1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label1MouseEntered

        if(controller.getLevel() == 1){
            resourceManager.loadImage("infinity1", label1, "");
        }
        else{
            resourceManager.loadImage("infinity3", label1, "");
        }
        
    }//GEN-LAST:event_label1MouseEntered

    private void label1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label1MouseExited
        if(controller.getLevel() == 1){
            resourceManager.loadImage("infinity1", label1, "");
        }
        else{
            resourceManager.loadImage("infinity2", label1, "");
        }
        

    }//GEN-LAST:event_label1MouseExited

    private void label2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label2MouseEntered
        if(controller.getLevel() == 2){
            resourceManager.loadImage("clock1", label2, "");
        }
        else{
            resourceManager.loadImage("clock3", label2, "");
        }
        
    }//GEN-LAST:event_label2MouseEntered

    private void label2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label2MouseExited
        if(controller.getLevel() == 2){
            resourceManager.loadImage("clock1", label2, "");
        }
        else{
            resourceManager.loadImage("clock2", label2, "");
        }
        
    }//GEN-LAST:event_label2MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseLevel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChooseLevel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel textLabel;
    // End of variables declaration//GEN-END:variables
}
