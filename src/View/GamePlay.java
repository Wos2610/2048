package View;

import Controller.Controller;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JLabel;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.Timer;

public class GamePlay extends JFrame{
    
    private Controller controller = Controller.getInstance();
    private ArrayList<JLabel> board = new ArrayList<>();
    int n = controller.getMatrix().getN();
    
    /**
     * Creates new form GamePlay
     */
    public GamePlay() {
        initComponents();
        initUI();
        initBoard();
        renderBoard();
        
    }
                
    void initUI(){
        this.setSize(650, 480);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
    }
    
    
    void initBoard(){
        board.add(label1);
        board.add(label2);
        board.add(label3);
        board.add(label4);
        board.add(label5);
        board.add(label6);
        board.add(label7);
        board.add(label8);
        board.add(label9);
        board.add(label10);
        board.add(label11);
        board.add(label12);
        board.add(label13);
        board.add(label14);
        board.add(label15);
        board.add(label16);
        
        panel4.addKeyListener(new KeyListener(){
            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {
                controller.setPreMatrix(controller.getMatrix());
                controller.moveNumber(e);
                System.out.println("PreMatrix");
                controller.getPreMatrix().output();
                System.out.println("CurMatrix");
                controller.getMatrix().output();
                
                controller.sumOfValue(e);
                controller.moveNumber(e);
                renderBoard();
                
                int delay = 300; // Thời gian trễ là 1 giây
                Timer timer = new Timer(delay, new ActionListener(){
                    boolean isFirstTime = true;
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if(isFirstTime == true){
                            System.out.println("Delay");
                            isFirstTime = false;
                            if(controller.isIsMoved() == true || controller.isIsAdded() == true){
                                controller.setPreMatrix(controller.getMatrix());
                                controller.addNewNumber();
                                controller.setIsMoved(false);
                                renderBoard();
                                controller.getMatrix().output();
                            }
                            else{
                                // hien thi thong bao
                            }
                        }
                        else{
                            ((Timer)e.getSource()).stop();
                        }
                    }
                });
                timer.start(); // Bắt đầu thực hiện Timer
                
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                System.out.println("Release");
            }
        });
        panel4.requestFocus();
    }
    
    void renderBoard(){
        controller.getMatrix().output();
        
        int index = 0;
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= n; j++){
                int value = controller.getMatrix().getValue(i, j);
                board.get(index).setOpaque(true);
                switch (value) {
                    case 2 -> board.get(index).setBackground(Color.red);
                    case 4 -> board.get(index).setBackground(Color.blue);
                    case 8 -> board.get(index).setBackground(Color.green);
                    case 16 -> board.get(index).setBackground(Color.yellow);
                    case 32 -> board.get(index).setBackground(Color.ORANGE);
                    case 64 -> board.get(index).setBackground(Color.PINK);
                    case 128 -> board.get(index).setBackground(Color.magenta);
                    default -> {
                        board.get(index).setBackground(Color.LIGHT_GRAY);
                        board.get(index).setOpaque(false);
                    }
                }
                
                board.get(index).setText(String.valueOf(value));
                index++;
            }
        }   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();
        restartButton = new javax.swing.JButton();
        panel2 = new javax.swing.JPanel();
        panel3 = new javax.swing.JPanel();
        panel4 = new javax.swing.JPanel();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        label5 = new javax.swing.JLabel();
        label6 = new javax.swing.JLabel();
        label7 = new javax.swing.JLabel();
        label8 = new javax.swing.JLabel();
        label9 = new javax.swing.JLabel();
        label10 = new javax.swing.JLabel();
        label11 = new javax.swing.JLabel();
        label12 = new javax.swing.JLabel();
        label13 = new javax.swing.JLabel();
        label14 = new javax.swing.JLabel();
        label15 = new javax.swing.JLabel();
        label16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        homeButton.setText("Home");

        undoButton.setText("Undo");
        undoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                undoButtonMouseClicked(evt);
            }
        });

        restartButton.setText("Restart");
        restartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(371, Short.MAX_VALUE)
                .addComponent(homeButton)
                .addGap(18, 18, 18)
                .addComponent(undoButton)
                .addGap(18, 18, 18)
                .addComponent(restartButton)
                .addGap(27, 27, 27))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeButton)
                    .addComponent(undoButton)
                    .addComponent(restartButton))
                .addGap(33, 33, 33))
        );

        getContentPane().add(panel1, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );

        getContentPane().add(panel2, java.awt.BorderLayout.PAGE_END);

        panel4.setLayout(new java.awt.GridLayout(4, 0, 10, 10));
        panel4.add(label1);

        label2.setText("jLabel2");
        panel4.add(label2);

        label3.setText("jLabel3");
        panel4.add(label3);

        label4.setText("jLabel4");
        panel4.add(label4);

        label5.setText("jLabel5");
        panel4.add(label5);

        label6.setText("jLabel6");
        panel4.add(label6);

        label7.setText("jLabel7");
        panel4.add(label7);

        label8.setText("jLabel8");
        panel4.add(label8);

        label9.setText("jLabel9");
        panel4.add(label9);

        label10.setText("jLabel10");
        panel4.add(label10);

        label11.setText("jLabel11");
        panel4.add(label11);

        label12.setText("jLabel12");
        panel4.add(label12);

        label13.setText("jLabel13");
        panel4.add(label13);

        label14.setText("jLabel14");
        panel4.add(label14);

        label15.setText("jLabel15");
        panel4.add(label15);

        label16.setText("jLabel16");
        panel4.add(label16);

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(panel4, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel4, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
        );

        getContentPane().add(panel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restartButtonActionPerformed

    private void undoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_undoButtonMouseClicked
        System.out.println("Undo");
        controller.setMatrix(controller.getPreMatrix());
        System.out.println("Current matrix:");
        controller.getMatrix().output();
        renderBoard();
    }//GEN-LAST:event_undoButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePlay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label10;
    private javax.swing.JLabel label11;
    private javax.swing.JLabel label12;
    private javax.swing.JLabel label13;
    private javax.swing.JLabel label14;
    private javax.swing.JLabel label15;
    private javax.swing.JLabel label16;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label5;
    private javax.swing.JLabel label6;
    private javax.swing.JLabel label7;
    private javax.swing.JLabel label8;
    private javax.swing.JLabel label9;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JButton restartButton;
    private javax.swing.JButton undoButton;
    // End of variables declaration//GEN-END:variables
}
